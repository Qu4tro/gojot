// Code generated by go-bindata.
// sources:
// bin/adjectives.txt
// bin/nouns.txt
// DO NOT EDIT!

package sdees

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _binAdjectivesTxt = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x44\x59\x4b\x9a\xf4\xac\x0a\x9e\xbb\x8a\xb3\x81\x5e\x14\x89\x24\xa1\xcb\x88\x8d\x5a\xe9\xf4\xea\xcf\xf3\x42\xea\xff\x06\x05\x68\xbc\xa0\x72\x2f\x5a\x68\x7d\x25\x5a\x68\x1b\x80\x35\x6b\xe5\x0c\xaa\x1f\x8e\xd9\x8c\x2a\x3e\x1d\x6a\xc6\x4e\x49\x96\xba\x27\x5a\xbe\x79\x45\xb3\xd0\x1f\x03\x01\x54\xb5\x93\x4a\xa2\x45\xc9\x30\x5b\x4d\x76\xa9\xd1\x63\x43\xde\x18\xa3\xb3\x3e\x0b\x18\xf5\xe8\xb2\xd9\xb0\x52\x8f\xf5\xbb\xda\xe2\x7b\x83\x88\x91\x7d\x18\xad\x23\x3a\xa7\xaf\x3c\x6b\x0e\xbe\x66\xac\xb1\xae\xdc\x46\x70\xb1\xae\xdc\xbb\x3c\xa4\x64\xae\x03\x0c\xac\xeb\x34\x1a\xe8\x93\xec\x40\xd6\x44\xab\xce\x3e\x9c\x30\xef\x1d\x93\x4a\xb9\x13\xe5\xff\x1d\xba\x26\xca\x74\xfa\x26\x99\x3e\x6b\xe7\x2c\xc1\x47\x3e\x38\x36\xce\xdf\x2a\xd5\xb9\xcc\x6a\xcf\xa0\x37\xd7\x31\x4d\x67\x4f\xb4\x19\x61\xe5\x7d\x37\x30\x85\x09\xbb\x56\xf9\xf3\x09\xbb\x31\xc7\x8c\x83\x29\x27\xfa\x26\x4b\x54\x56\x3d\xb4\x80\xa7\xc2\x36\x12\x15\x79\x31\x20\xa6\x96\xc2\x3b\x36\x2f\x65\x9a\xaf\x50\x54\xb7\x44\x27\xc5\x7a\xe7\x22\xfb\xf4\x5d\xcf\x45\x86\x04\x35\xf1\xbc\xe7\xec\x98\x77\xce\xee\x03\xeb\x2a\x7e\xd5\x75\xb7\x3b\x51\x95\x93\xfc\x4c\xb5\xea\xfd\xc1\x31\xee\x37\x16\x69\x34\x0e\xf6\x7b\xfa\x99\xe4\xd8\xf4\x7c\x08\xd3\xdd\xef\xa8\x1f\x74\x62\x72\x6f\x12\xbc\xf5\xae\xe6\xcb\xf6\xa1\x55\xfa\xe1\x9d\xc3\x1f\xd2\x0f\x33\x7b\x93\x35\xd6\x9f\xe3\xb3\xdc\x9b\xa4\xc4\x95\xbc\xd9\x68\xe7\x44\x17\xbd\x1c\x1a\x20\x77\x3d\x81\xb7\x59\x12\xfd\xca\x33\x6b\xa1\x9c\x16\xb2\x85\xfc\xca\x21\xba\xf8\xbe\xd0\x95\xef\xb4\x30\xcd\x21\xde\xe6\x4d\xc6\x00\x17\x0b\x97\x22\x3b\xbb\x38\x2f\x5c\x79\x93\x55\x08\x03\xbc\x6d\x9d\xed\x95\x16\xee\x68\x8c\xc1\x96\x16\xbe\xa4\x64\x36\xce\x69\x91\x3d\x2d\x52\x8a\x5e\x77\x5a\x64\xf0\x57\x97\x3f\xef\x8e\x81\xf2\x47\x66\x9c\x96\x02\xa5\x72\xf8\x45\x35\x7f\x5d\x87\x0c\xf4\xaa\x82\xa3\x32\xd9\xc1\x17\xe3\xb6\x97\x32\xe3\x6e\x16\x95\x12\x58\x4d\xfa\x91\x16\xf5\x0d\xd5\xa2\x73\xd6\xf5\x76\x94\x0b\xf7\x9e\x16\x23\xa9\x37\x10\x86\x1a\xbd\x19\xf0\xf2\x2e\xa6\x97\xdf\xe1\x62\xcc\x7f\xe8\x10\xde\x00\xf7\x63\xfc\x43\x8a\x4b\x33\x7d\x71\x05\xba\x6a\x5a\xe6\xd9\xee\xb4\x4c\x2b\x80\x7d\x04\x33\xb3\xdf\x69\xa5\x9d\x01\xcb\x3a\x0b\xf9\x0d\xae\x54\x0a\xee\x7a\xa5\x72\xa6\x95\x9a\x6f\xb7\x52\xb3\xe7\x45\x57\x32\xc6\x9d\x03\x3b\xbb\x2b\x59\xcc\x9b\x21\x97\x2b\x53\x7f\xbe\xb0\x0d\x92\x9a\xd6\x83\xea\x1e\xea\xb0\x1e\x64\xa7\x0f\x3f\x98\x1a\x20\x9b\xaf\x76\xf0\x29\x2b\x81\xc0\x89\xd6\x43\x4a\x76\xf5\x00\x55\x6e\xa0\x37\x15\x17\x82\xf5\x98\xcb\x82\x9e\x59\x5f\x77\x5a\x0b\x9d\xa7\xa3\x8e\xe3\x14\xa6\xea\xd0\x00\xdf\x0c\xa4\xd2\x87\xbf\xf0\x5a\x74\x66\x0c\xd2\xee\xad\x79\xfa\x94\x39\x9e\xcf\x7a\x84\xe0\xac\x5a\xd0\x2a\x1a\xac\x69\xd1\xde\xc1\x9a\x9e\x0b\xb9\x80\xaf\x7a\x6e\x6a\x61\x37\x56\x3d\x4f\xad\x40\xad\xf0\xe0\x87\xf8\x4d\xab\xd6\x95\xad\xfa\xba\x35\xf3\xf9\x50\x9b\xab\xeb\xaa\xb5\x3f\xd7\xa9\xea\xd7\xa1\x8a\x0d\xb4\xb1\x7d\xb6\x50\xcb\x52\x5d\x7b\x57\x9d\x50\x98\x18\x7e\x91\x65\x5c\x88\x91\xdf\x02\xc4\xa3\x02\xfd\xa1\xc1\xdc\x80\x54\x5f\x98\x66\x7a\x65\xc7\x93\x4b\x5a\x67\xf6\x79\xb3\x8c\xe9\xa7\x9d\x27\x14\x02\x4a\xb7\x4e\x0b\x5e\x5c\x40\xd6\x69\x6f\xff\x6e\x6f\x34\x06\x7e\xfc\x80\xbb\xfa\x23\x65\xda\xb6\x3b\x65\x92\x02\x78\x12\x2c\x97\x63\x1c\x25\xd3\xd9\x52\xc6\x8b\xfb\x73\x65\x6a\x8d\x2d\x65\xb2\x57\xca\x14\xfa\x90\xe9\xef\xcf\x65\x30\xc3\x38\x02\x34\xaa\xc0\x1b\xd7\xa7\xdb\x52\xe6\x45\x2b\x09\x88\x55\xdc\xbe\x66\x5e\x35\xd6\x64\x6e\x0e\xb0\x3f\x6f\xec\xb7\x04\x22\xec\x4f\xe6\x4d\x60\xb8\x32\x17\x59\xe1\x18\x9c\x90\x98\x59\xa0\x24\x78\xd7\xcc\xa7\x56\x59\xbd\xcb\x9e\x8f\x8d\x2b\x9c\x0a\x28\x18\x75\x5f\xd5\x70\x14\x10\x7d\x35\x69\xcf\x06\x9d\x2d\xf6\x1c\x24\x25\x08\x86\x60\x3b\xf9\x96\x02\x2d\xcf\x92\x61\x10\xd7\x94\x65\xdb\x42\xb2\x40\x09\x9e\x20\x65\x81\x9d\xf2\xae\xd0\xa7\x2c\x36\xee\x94\xa5\xff\xf3\x1d\x68\xf4\x11\x27\x96\x8e\xd7\xc5\xf0\xbe\xcf\xee\x7b\x07\xe5\xf7\x25\x5d\x4a\x99\x5d\xdc\xc3\x67\xe9\x8d\x6b\xff\x2c\x31\xa4\xae\x3e\x6f\x4c\x77\xbe\x59\xde\x6c\xcf\xd6\x7f\x7f\x77\xca\x0a\xbe\xd9\x95\x38\xeb\x5c\xe2\x72\x8c\x16\x80\x55\xab\xe0\x69\x8c\xc2\x1e\x67\x63\xb2\x3b\x65\x9b\xf5\x95\x32\xa8\x59\x4a\xca\xb3\x83\xf7\x80\x77\xa5\x13\x23\xef\xbe\xcd\xba\x0e\x51\x04\x09\x4c\x3b\x5b\x62\x82\x80\x31\x59\x6f\xe5\x31\xd8\x4c\x36\x0e\xf4\x75\x80\x50\x29\x5e\xb5\x2a\xd6\xe0\x3c\x57\x7f\x5b\xc6\xb5\x51\x3c\xa1\xd3\xee\xe4\xd8\xed\x1d\x17\x72\x47\xcf\x25\x86\xc2\x9c\x63\x97\xc2\xeb\x30\xef\x67\x77\x63\x5c\x36\xa9\x89\x0b\xec\x35\x9f\x0b\x99\x91\xbf\x30\xe3\xf8\xf8\x7e\xb6\x71\x27\xae\xb0\x56\xbe\x50\x50\xce\x64\x0d\x15\x0c\x3a\xcf\x08\x06\xb8\xe2\x1e\x7d\x6b\x04\x47\xce\x5b\x1d\x61\xf3\x62\xe4\x38\x66\x97\x87\xbb\xfa\x0e\xee\x7f\x66\x4c\xfe\x99\xb8\x16\x43\xa0\x85\x40\xcc\xc7\x0c\x18\x20\x74\xbf\xa9\x72\x5f\x9d\xab\x77\x44\x52\x0c\x35\xe7\xdf\x95\x4b\xf1\xee\xdf\x55\x9c\x49\x60\xdf\xec\x77\x2d\x11\x2f\xf1\xaf\xfa\x62\xbf\x10\x82\xe8\x18\x46\x5f\x85\x6c\xff\xd0\xfd\xa4\x52\x12\xff\xce\x85\x3d\x04\xe4\xdf\x59\x06\x88\x8d\x96\xe9\xd6\x7f\x23\x58\x8e\x8d\xc4\x3b\xc5\x00\x86\xfb\xde\x8d\x4a\x79\x5e\x62\xa3\xd2\x39\x6d\x74\x4a\x11\xc2\x90\x33\x7a\x2b\x4e\x43\x18\x0a\xc7\xb6\x51\x1d\x71\x07\x9b\x0f\xb2\xaf\xad\xcc\xba\xa7\x8d\xfa\xfa\x18\xb8\x8d\x3a\xb6\xc1\x6f\x96\x71\xa7\x8d\xc9\x4d\x2f\xb0\x7b\x92\x8d\x19\x97\xb6\xb1\xec\x90\xf0\x8d\x4f\xf2\xa6\x0d\x71\xdc\x5d\x2d\x37\xbe\xd2\x26\x6c\x2b\xa7\x4d\x0a\xc4\x6a\x93\x0a\xba\xca\xfa\x42\xc3\xb0\x8d\x8f\x94\x5f\x2c\x53\x68\xf7\xf3\x6f\x85\xf0\xbd\x50\x3f\x1c\x79\xcf\x15\x3b\x17\x81\x97\xd8\x8a\xb4\x16\x43\xf5\x62\x43\xc7\x84\x0d\xdc\xc2\x7b\xe0\x05\x36\xa5\xf3\x4e\x9b\xaa\x2b\xff\xa6\xc6\xbb\x46\x3f\xa4\xc4\x8f\xa3\x36\x26\x4e\x9c\x36\x9d\x96\x10\x3f\x16\xc0\xdd\x0f\x01\x4e\x70\x49\xc6\xec\xc0\x03\xbf\xcd\xf8\x67\xe2\xc1\x37\x63\xac\x6a\xcf\x4a\x26\x5c\x61\xce\x37\xf7\xf9\xec\x97\xf2\x90\x3e\x0d\x5a\xb9\xcd\x73\x29\xd1\xfa\x4f\x0f\xb7\x59\xeb\x9d\xb6\x69\xe6\x30\xae\x6d\xc2\x23\x04\x92\x78\xa8\x09\xc3\xb0\xbb\x87\xd9\x49\x2a\xb6\xdc\x71\xba\x9d\x1a\x16\xdc\xc9\x2c\xe4\x64\x27\x78\xd4\x1d\xaa\x40\x05\x78\x14\x4e\xbb\x5b\xdf\x5d\x32\x3e\xc9\x86\x17\xde\x65\x8f\xe3\xed\x85\xce\x30\xe2\x7b\x61\xf2\x50\x60\x2f\xb2\x00\xf4\x87\xf9\xbd\x68\xd8\xe3\x1d\x8e\xf7\x4e\xbb\xe2\xa4\xbb\x6a\x06\xd8\x40\x5a\x78\xc3\xdd\x68\x75\xe3\x89\x67\xcc\xa2\x9d\x41\x8d\x4f\xd7\x10\x1f\x72\xa7\xdd\xdc\xbe\x00\x0d\x40\xce\xde\xe0\x0a\x08\x52\xf8\xed\x3b\x9b\xea\x1b\x6d\x1d\xdc\x7f\x26\x56\xd3\xb9\x1e\xe8\xf1\x98\x63\xb7\x19\x61\xea\x6e\x1e\x51\xed\x93\x0c\x7a\xb2\x4f\x29\xc3\xc5\x65\x9f\xa5\x78\x7e\xb2\xbb\x31\xdc\xe7\x18\x13\x37\x73\xd0\x22\xc8\x40\xd2\x41\x65\x03\x80\x18\x65\x10\xae\xbd\x07\xd5\xec\x0b\x7f\x88\x72\x3b\xe9\x70\x8f\x11\xcd\x37\x38\xa8\x35\xf4\x5a\x76\xf0\x35\xf4\x6b\x93\xea\x0d\xb8\x33\xdc\xca\x41\xd6\x8f\x74\x3c\xf7\x80\xfc\xe3\x06\x74\x85\x38\x60\x6f\x3d\x8c\xf4\x45\x19\xd1\x43\xf1\xee\x37\x60\x71\xd9\x3d\xb8\xb4\x98\x5a\x9e\x4d\xb9\x8b\xdb\x87\x43\xb2\x5f\xfc\x21\xfb\xe1\x60\xa3\x32\x87\x54\xa7\xbf\x9a\x8c\x15\xa9\xe5\x21\x85\xe2\x05\x0f\xe9\x9e\x96\x1c\xd2\x87\x9a\x1b\x05\x64\x40\x2e\x64\x87\xe2\x12\xd2\x81\xd3\xfa\x26\xcf\xb1\xb5\x3e\xc9\x16\xd2\x52\x09\xa2\x37\x19\x4f\xdf\x48\xc7\xdc\x39\x1d\xb3\xc4\x11\xe6\x99\x6d\x9e\xc0\x21\x56\xc7\xf4\xd4\xe7\x98\x66\x02\x5e\xa6\x61\x86\xa7\xbc\xc7\xec\xaf\x3b\x1d\x77\xab\x6e\x21\x8f\x1b\x71\xa1\x33\xe5\xf6\x41\xd6\x3b\x49\x16\xff\x26\x3b\xb8\xa8\x23\x49\x29\xf8\xf1\x4e\x8e\xbf\x36\x37\x58\xa0\xa4\x6e\x6a\x67\x34\x66\x1f\x71\x60\xf1\x20\x08\x2e\x52\xce\x93\x6b\x67\xe0\xf0\x2f\x72\x36\xb2\x81\x6c\x44\xce\xc6\x86\x60\x05\x94\xba\x43\x02\x61\x7e\xc5\x41\x61\xd9\xb3\xe9\x93\xec\x4a\x5d\xa9\xe6\xc7\x23\x48\x45\x88\xc9\xe3\x43\xd7\x8f\xe1\x97\x9a\xff\xf1\x51\x57\xe3\xfc\x4c\xfe\xe7\x0a\xa4\x3e\x46\x5a\xaa\xdb\x21\xa9\x55\x9f\x45\x7f\xa6\x74\x19\x31\xa8\xe3\x1a\x7c\x54\x44\x0f\xd1\x3b\x22\xb7\xf2\xd1\x88\x98\x23\xf6\x70\x1a\xa6\x45\xea\x5b\xea\x1a\x5b\x7a\x3a\x2e\x66\x32\x22\xa9\x80\x60\xdc\xe9\xdb\x9d\xca\x37\xed\xbb\x23\xd8\x98\x6f\x26\xb7\x23\xdf\x9e\x65\xdd\xe9\x5b\x17\x17\x86\x6f\x45\xd4\xff\xad\xb7\x7f\x9c\xf9\x09\xdf\xbe\x27\x1e\xe9\x1b\x86\x0d\x4b\xb8\x12\x7e\xcf\x37\x57\x58\xd0\x17\xb5\x39\xd2\x0b\x6a\xfd\x82\x4a\x00\xb8\xbc\x73\xd0\xe5\x4e\xaf\xaa\x63\x38\xba\xc0\x16\x70\xe1\xfc\xe4\x26\x68\xd5\x54\x28\xb2\x33\x64\x78\x94\x49\xba\x0b\x08\x5a\x98\x51\xe8\x64\x07\x35\xe4\xb1\x50\xdd\xa7\x60\x34\xbc\x2b\x22\x91\x84\x30\x24\x15\x9a\xfb\xf1\x8c\x78\x43\xa7\x0a\x02\x74\xcf\x4e\x90\x9c\xc0\x5e\x17\xde\x46\x0a\xc1\x2a\x3c\x0e\x47\x6f\x06\xbc\x72\xf2\x28\x35\x79\x06\x04\x10\x2b\xc9\xe9\xd6\x17\x02\xe3\x17\x8c\x18\xca\xfb\xdf\x50\x9c\x7f\xc8\x07\x69\xf5\x96\x06\xbd\x3f\x7d\xfb\x17\xe2\xd4\x54\x14\xb6\xb2\x68\xeb\x82\x27\x41\x5e\x04\x30\x9c\x53\x8d\x75\xf4\x59\xe7\xc2\x0f\x1d\x13\x4a\x52\xf0\x16\xae\x68\xc5\x6f\x1f\x29\x6e\x2a\xf3\x77\x9a\x1b\xfd\xe2\xd5\x85\x72\x87\x5a\x9d\xb4\xd2\x62\x0c\x7c\x68\x3a\x29\xe7\xb0\xf0\x27\xe1\x31\x90\x37\xd4\x41\xc0\xcf\xe8\xbd\xca\x26\x2e\x8f\x27\x7d\xb3\x5b\x89\x93\x5e\xdc\x0f\xd9\xd0\x55\xb0\xd2\x27\x92\x3f\xe9\x3c\x75\x1c\xe9\xa4\x2a\x14\xd3\x2b\xd6\x34\xa4\x3e\x27\x45\x45\xe6\xa4\xb0\x02\x27\xd9\x9b\x4b\x4c\x83\xce\xfb\xf0\x20\xe4\xd9\xc6\x7d\xe0\x89\x07\x3a\x99\x3a\xd8\x63\x1a\x80\x39\x98\x63\x7e\xa5\x93\xdd\x64\x9d\x5c\x34\x63\x12\x17\xc8\xd6\xc9\xb6\x7a\x19\xe2\x64\x5f\x02\x3e\xeb\xc4\xfb\x01\x15\x19\xb0\x06\xa7\x94\x17\xe0\x93\xe2\x9f\x52\xe5\xd9\x51\xaa\x5a\x3a\x3d\xbc\xc7\x05\x9e\xd2\x7d\x1e\xe2\x93\x53\x29\xae\x4b\x33\x5b\x4d\xa7\x96\x7c\xa7\x53\x21\x7c\x7e\x14\x85\x53\x8f\xf5\x74\x56\x84\x9d\xde\x8d\x44\x0f\xb3\xbd\x8e\xc6\xe9\x9c\x86\xad\x27\x62\x9b\x13\x59\xdc\x19\x76\x0f\x63\x2b\xe1\x96\xaa\xfb\x94\x4a\x66\x7a\xa5\x4a\x60\xa0\x52\xf8\xad\x0a\x39\xf6\xf6\xec\x1c\xba\x5c\x91\x9c\x55\x78\xd2\xca\x4f\xb4\x58\x79\xe5\xde\x71\xce\xca\x1c\x27\xac\xee\x64\x2b\x42\xf4\x45\x11\x8f\x57\xb6\x77\x8c\xbd\x52\xe5\xdf\x91\xaa\xac\x9c\xaa\x6c\x58\x5d\xa0\xd0\xa9\x22\x5a\xab\xe2\xcc\xa8\x3c\x45\x04\x50\x68\x23\x1a\x2f\xb8\xa1\xaa\xf5\x93\x8b\x81\xee\x43\x5b\x7a\x8a\x93\x55\xfb\xa0\xb2\xcb\x0a\x0a\x93\xa2\xc8\x55\x11\x0d\x55\xcf\x77\x63\xc9\x79\x46\x6e\x5a\xe7\xb0\xa7\x9a\x56\x27\x0c\x83\xd2\x06\x15\xd0\x85\xb3\x67\x18\xba\xb0\x74\x0a\xa2\x73\xd2\xe5\xb3\xa4\x2e\x30\xc6\xe8\xe9\xfc\x33\x3f\x5d\x6c\xef\x18\xdc\xd5\x6b\x01\xba\xe0\x51\x5c\x79\x75\x65\x42\xb6\xa9\x39\x27\xdd\xb6\x05\xf7\xa7\x25\xe3\xf7\xb5\x21\x2d\xf6\xd4\x4d\xcf\x2a\x3d\x92\x1b\xc5\xea\x35\xf8\xd4\xc6\x35\x69\x6b\xda\xe1\x2b\xb4\x0d\xc1\x69\xd5\x33\xd3\x14\x75\x02\xbb\x93\xda\x1e\x5b\xf4\x2e\x1b\xa4\x5e\xe7\x88\x10\x54\xe7\xf8\x14\x10\x74\x8e\x3e\x28\xca\xb4\xfa\xc6\x2a\x6f\xb6\x55\xeb\xe6\xd5\x54\x6f\x7d\x7b\xa9\x10\x94\xb9\xb3\x03\x15\x5f\x2e\x53\x88\x43\x6a\x4f\x4c\x08\xdc\x47\xc4\x12\x0d\xea\xd9\xa8\x0c\xbb\x53\xa3\x88\xb8\x1b\xc1\x8b\x22\x93\x6b\x64\x54\x0a\x63\x8a\x79\x8c\xd0\xc8\xba\x7c\x22\x96\x06\xbb\x09\xa0\x90\xb9\xff\x4a\x92\x8d\x9f\xf0\xae\x71\x15\xf7\x77\x1f\xbf\xd9\x20\xbf\xd9\x87\xd8\x29\x8f\x97\x6c\x6c\x8d\x3d\xc8\x6a\x3c\x70\x51\x1f\x74\xe8\x82\xa1\xc7\x1d\xb6\xbc\xc9\x4a\xf7\xac\x9c\x9a\xd4\x57\x6a\xf2\x33\xf1\x68\xad\x78\xf9\xb8\x15\x92\x0a\x18\x5d\x6e\x1c\x5a\xa1\xf9\x6c\x51\x98\x7a\x7c\x72\x6b\xd8\x54\x6a\x04\x7e\x0d\x02\x9b\xd3\xe3\xce\x1d\xc5\x66\xaa\x96\xe0\xc8\x9f\x1a\xf1\x7f\x3e\xbd\x21\x8f\xf0\xc3\x19\x87\x45\x6b\xc6\xa7\xcc\x13\xd8\xcb\xe5\xcd\x18\x32\xd9\x8c\xdf\xcf\x77\x59\xf9\x76\xf4\x2a\x8e\xdf\xf0\x02\xcd\x74\x71\x11\x6b\xa6\x79\x86\xb3\x6e\xa6\xdb\xec\x8e\x07\xff\xd7\x35\x73\x6a\xfd\xc6\xf5\x73\xc1\xb1\x40\x7b\xb4\xd3\xe6\xe2\x1d\x9e\xd2\xb4\x79\x36\x9c\x64\x56\xd0\xd6\xb0\x32\x82\x29\xbc\xb1\x1b\x91\x36\xff\xfe\x8a\x8f\x78\xaa\x38\x3f\x93\xd6\x17\x20\xb2\xc5\x9f\x49\x66\x5c\x3c\x9a\xfd\x99\x30\xe2\x1a\x1a\xf0\x33\xc5\x47\xc9\xfa\xe2\x8e\x71\xc2\x0e\x61\x9d\x7e\xa6\x44\xd6\xfa\x33\xe5\xef\xcf\x2f\xce\x68\x91\x9c\x8c\xbc\x7e\x6b\x11\x33\x44\x61\xd4\xe8\x5c\x22\xa3\x99\x1d\x0d\xcf\xcb\x8c\x9a\x0f\x37\x4e\x46\xbd\x61\x14\x2e\xcf\x3c\xfa\xf5\xa4\xda\x78\x61\xc0\x95\xa3\x88\x63\xbc\x6a\xcd\x78\x2d\xb8\x7b\xe3\xfc\xfc\xef\x60\xbc\x95\xe7\xce\x8c\xf7\x59\xc8\x92\x71\x11\x7e\xfb\x28\x38\x18\x3f\x0e\x1e\x0b\xca\xca\x3e\xa5\xcd\xd2\x63\x46\xd7\x32\x47\x10\x35\x96\xeb\x4d\x6b\xbc\xb9\x1d\xfc\x09\x83\x4d\xd6\x23\x45\xc1\x36\xf2\x36\x3f\xcc\xa7\x36\x65\xb2\xe3\x34\xd2\x38\x99\x8c\xbf\x3b\x99\x92\x17\x7d\x4c\x97\xd9\x47\x32\x3d\x23\x9d\x32\xd5\x13\x5f\xc7\xe0\x9a\x5c\x3b\x01\x2b\x06\xde\xd8\x65\x22\x07\xb3\x99\x39\x99\xdb\x73\x8b\x3f\x45\x6c\x8e\xc3\xc5\x36\xaa\x44\x9d\x72\xea\xb4\x81\x40\xfa\xdd\x11\xe4\x74\x2f\xa8\x76\x24\x51\x9b\x3b\xf5\x4e\x6f\xb5\x3b\x75\x84\xa2\x11\xb4\xf5\x95\x90\x6b\x03\x71\x76\xe4\x9f\x9f\x72\x6a\xd8\x31\x38\x74\x90\x75\x48\x79\x2a\xcc\x7d\x8d\x6a\xb6\x57\xb4\x56\x2f\x08\x76\x7f\x8b\x07\x7d\x21\xf3\x01\x6d\x3c\x1e\x84\xab\xed\x9c\x21\xee\x9d\xf9\x2c\x77\xea\xfc\x79\xa4\xce\xc5\x8d\x76\x67\x18\x19\x1f\x11\xce\xad\x1f\xb4\xef\x37\xd0\xcb\xa1\xfb\xee\x7e\x90\xb5\xd4\x0f\x08\x52\x3f\xe4\x1d\xb9\x7b\x3f\x34\xe2\xbb\x7e\xa8\x8d\xd4\x0f\x43\xdc\xdf\x8f\x09\xfa\x4e\x1d\x92\xdb\xc5\x2b\x2f\xff\x10\x56\xf5\xe2\x74\x97\x13\x5a\xe2\x28\xc2\x89\x2e\x75\x45\x30\xd0\xe5\x37\xf5\x97\x94\x82\x47\xed\x2f\x41\xf2\xdd\x8b\x57\x69\x7b\x91\xd3\x81\x93\xad\x21\xfa\xed\x45\x9b\x7f\x02\xa3\x5e\xa3\xe9\x27\x81\x1f\x04\x1e\x77\xea\x67\xfc\x8d\xd0\x4f\xf5\x83\x9d\x8a\x00\xa8\x57\xf6\x03\x56\x5d\x16\xbf\x87\x88\x71\xbb\x6e\x23\xf5\x18\xa8\x45\x72\xea\x0a\x07\x98\xba\xb6\xc3\x99\x74\xdb\xde\xe1\x3d\x1c\xf1\x07\x4c\x4b\xbd\x91\xbd\x62\xab\xc6\xae\x80\xc0\x83\x56\xd7\x86\xde\x10\x84\xf7\x26\xb0\x16\xbd\xc9\xcb\xa1\x45\x7e\x8b\x4c\xcd\x6d\x76\x6f\x85\xab\xaf\xdd\x54\x7d\x88\x86\xa5\x04\xe1\x5b\xb7\xe0\xb3\x3d\xd5\xe7\xfe\x33\xc9\xf9\x84\x05\x61\x20\xa6\xe0\x01\xd4\xe9\x47\x7b\x7c\x0d\xbc\x3c\xa7\xff\xfc\x58\x1f\x34\x66\x24\xec\x7d\x30\x65\x2f\x27\x39\x75\x03\x71\x4b\xfe\x07\x80\x8e\x1b\x86\x0d\x67\x07\x3f\x43\xb6\x0d\xf0\xfc\xfc\xf3\xe1\xf9\x0c\x3e\xa8\xe1\x51\x86\x91\xab\x27\x08\xf8\x59\xa4\x56\x31\xdf\xd4\x47\xcf\xc6\x35\x3b\xe7\x63\xc2\xf8\xf4\x31\x0d\x3b\xce\x25\x4f\x8c\x9b\x1e\x1b\xb8\xb0\xcc\x05\xcc\x7a\xf2\xd7\xa7\xff\x89\xe9\x57\x34\xd7\xd5\x8b\xb3\x7d\x22\x32\x4e\x7d\xba\x4c\xcd\x86\x67\x02\x5c\x02\x3d\x7f\x62\xf5\x09\x0f\xc1\xa9\x5f\x54\x31\xee\x62\xe8\xc7\x85\x20\x34\x84\xf8\x42\x98\xdc\xef\xb3\x7d\xfe\x73\xeb\x77\xd5\x7a\x7b\xc2\x37\x68\x51\x4d\x83\x56\x19\x80\xaf\x3b\xe1\x0e\xbd\xd0\x39\x20\x68\x03\x3a\x3f\xa8\xe2\xb7\xbb\xb1\x02\x81\x51\x86\x09\x3d\x1e\xd5\x09\x7f\xc5\xe1\x61\xe2\xa0\x2b\xdb\x9d\xc6\x53\xaf\x1b\x1c\x79\xe3\x60\xae\x77\xc0\xaf\x21\x4e\x16\x7f\xca\xc1\xc8\x6e\xc9\xa7\x54\xfc\x32\x1b\x50\xe7\x7f\x70\xc6\x0a\x4f\xee\xef\x04\x6c\xc8\x60\x37\x80\x40\x77\x1a\x07\xd5\x97\xef\x78\xb0\x51\xe3\x89\xd3\x8e\x03\x6a\x3a\x0e\xa9\x0e\xc2\x4c\x8f\x43\x2c\x3b\x8c\x79\x1f\xec\x81\x4c\xac\xe0\x64\x1c\xea\x30\xa6\xa7\x0a\x05\x1a\xd3\x27\x78\xf4\x0e\xc9\x77\x1a\x2e\x12\x0e\x37\x09\x86\xfc\x7c\x62\x4e\x5a\x94\x87\x06\x14\xf3\xa1\x0c\xa2\x31\xdc\x32\x0f\xb8\x7c\x5f\xca\x08\xf9\x76\x01\x01\xfb\x32\xf0\xae\x21\x4b\xc3\x5c\x3a\x11\x97\x72\x1a\xa6\xd3\x33\xdd\x61\x73\x9d\x6e\x77\x86\x4d\xf4\xcf\x28\xc6\x8e\x4b\xd3\xb8\x9b\x7b\x94\xb9\xc8\xcf\x14\xcf\x0c\xe6\x5e\x04\x3e\x76\xee\xe5\x4e\xb3\x0c\xa3\x34\xc3\x09\xcf\x4a\xeb\xea\xc9\xc2\xd3\xca\x6f\x8f\x5b\x66\x25\xaf\x65\xcc\xba\xf0\xaa\x5e\x96\x9b\x75\x11\x8a\x6f\x2b\x82\x3f\xa7\x32\x5b\x1f\xaa\x41\x76\xb1\x67\x99\xa8\x66\x3f\xd8\x07\x7a\xbd\x7a\xd6\x4f\xdd\x69\xd6\x4f\xcd\xc0\xbf\x0a\x74\x75\xd6\x17\x9f\x6d\x00\x7b\xe6\x3d\xeb\x27\xeb\x98\xd5\x26\x38\xaf\x1d\x17\x1d\xd4\x94\x0f\xcf\xfe\x10\xb3\xce\xe0\x6d\xf6\xd8\xfa\x12\x2e\xde\x7f\x99\xb8\x37\x9c\xcd\x83\xec\xd9\x9a\x8c\x3b\xcd\xd6\x19\x8d\x78\xc0\x98\xdb\x5d\xa6\xe7\x93\x68\xcc\xa1\x4d\xa8\x26\x2f\xe8\x06\x3c\xb5\x8f\xf4\xa6\xd5\x45\xf2\x4d\x3b\x2d\xf0\x52\x6f\xda\x27\xa7\x37\x95\xa8\xe4\xbf\x9f\x5a\xd7\x1b\x56\xe7\xcd\x75\xf7\x55\xdf\x5c\xd5\x15\xef\xcd\xe6\x61\xc5\x9b\x0d\x9b\xbe\x65\x1d\x4f\x79\xf3\x2d\x7b\x94\xac\xde\xa2\xfe\xb6\x8e\x81\xde\x4f\x81\xfd\xad\xb2\x06\x73\x6f\x85\x91\xc2\x6e\x6a\x9f\x8f\xb3\xec\x64\xe9\x72\x65\xbe\x68\xdf\x61\x21\x2f\x8a\xbf\x03\x2e\x7a\x39\x1b\x17\x7d\xc4\xf7\x7a\xfe\xcb\xb8\xc8\xbc\xac\x70\x91\x9d\x00\x98\xfb\x68\xf7\x45\x5e\x83\xb9\x98\x5e\x00\xfe\x70\x97\xff\xdf\x73\x71\x29\x5f\x3b\x82\x0d\xce\xd1\x38\x29\x73\x50\xba\x6d\x41\x0c\xfd\xca\x9a\x2e\x1e\xe9\x3a\xe4\x8c\x58\xfb\x3a\xa4\xb7\x87\x01\xff\xa7\xfc\x3a\xb4\x3c\xb0\xc3\x88\x5f\x08\x07\x73\xba\x04\xcb\x49\x7e\xfe\x39\xbf\x64\x87\xe8\x5e\x52\x40\x87\xed\xb8\xa4\x66\x74\x81\x1d\xe9\x18\xdd\x5d\x81\x2f\x81\x1b\xb9\x94\x17\xde\x91\x34\x5d\x88\x8d\x30\x19\x79\xa2\x9b\xa5\x4b\x15\xe6\xf5\x52\xfd\x43\xf7\x13\xc0\x5d\x1a\xb5\x81\x4b\xed\x09\x86\x2e\xa3\x50\xab\xcb\x38\x2a\x99\x97\x9b\xfa\xcb\xee\x74\x47\xea\x7f\x43\xca\xc0\xcd\xad\x33\x60\xcc\xb8\xe7\x79\xde\xe9\x8f\xea\x9d\xfe\x9e\x92\xd6\x9f\x5b\xaa\x3f\x4f\x67\xff\xb4\xe2\x94\xff\x0f\x00\x00\xff\xff\x86\x08\x5e\x38\x92\x23\x00\x00")

func binAdjectivesTxtBytes() ([]byte, error) {
	return bindataRead(
		_binAdjectivesTxt,
		"bin/adjectives.txt",
	)
}

func binAdjectivesTxt() (*asset, error) {
	bytes, err := binAdjectivesTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bin/adjectives.txt", size: 9106, mode: os.FileMode(436), modTime: time.Unix(1475068381, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _binNounsTxt = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x4c\x57\xdb\xba\xe4\xac\x0a\xbc\xe7\x2d\x89\x92\xc8\x6e\x15\x07\xb0\x7b\x65\x9e\x7e\x7f\x68\x7a\xcd\x7f\xd5\xe9\x1c\x3c\x14\x55\x45\x89\xea\xf0\x11\xad\x19\xb8\x9f\xa2\x0d\x9d\xa5\x43\xc3\x01\xfe\x11\x38\xb1\x71\xbd\xe1\x92\x37\x69\x6f\xd4\x1d\x0a\x61\xf5\x02\x76\x9b\x53\x83\x24\x6d\x4c\x27\x85\x46\xe8\x70\x13\x2a\x78\xc1\xfe\x32\x68\xd3\x38\xc1\x20\x35\xe9\xa0\x84\x99\xfb\x05\x8d\xbc\x48\x86\x8c\x8e\x70\x8a\x64\x98\x3d\x93\x9a\x63\x5f\x8f\xbd\x90\xe8\x0d\x15\x3f\x70\xb0\x66\xa8\xec\xa4\xe8\x53\x09\x86\xca\x51\xa9\x81\xc9\xe9\x1f\x54\x82\x24\xdd\x55\x2a\xbc\xba\x7c\x2a\xe5\x8b\x60\xc8\x87\x14\xf0\xe0\xca\x7e\x03\x25\xe9\xd2\x38\x19\x54\x79\x13\x70\x77\xd2\x4e\x0e\x4e\x95\xde\x6c\xb1\x49\x4b\x4c\x3d\x11\x54\x3e\x14\xf5\x86\xbe\xa7\x3a\x31\x79\xcc\x97\x67\x72\xe0\x4c\x08\x4e\x6d\x7c\x17\xc2\xfd\x4d\xe6\x0b\x0a\x54\x42\x30\x49\x4c\x7e\x03\x26\xe7\x77\x4c\x6c\x1e\x7b\xe0\x9e\xa7\xb9\xde\xd0\x28\x33\x82\x97\xd8\x9f\xbc\xa9\x07\x64\x6d\xf6\x78\x33\xd3\xc9\x9d\x17\xde\x86\x67\x0c\xf2\x67\x62\xdd\x4f\xde\x54\x65\xac\x59\x2a\xf6\x6b\xe2\x45\xd0\xb0\xe3\x45\xeb\xde\xa8\x78\x93\xc2\x1b\x75\xcd\xfd\xe6\x4c\x02\x1f\xa2\x17\x18\xa5\xa9\x31\x44\x92\xd9\x63\x7e\xfa\xc1\x06\x4d\xde\x4c\x20\x7a\x61\xe7\xbf\xbb\xc2\xf4\x67\xf2\x9e\x60\x94\xdb\x02\x27\xec\x58\x6f\x63\x83\x21\x95\xd3\x0d\x46\xca\x64\xe0\x45\xe6\x55\x1c\x0e\x8c\x67\x87\xdc\xa7\x32\xf5\x0c\x99\x95\xd2\x5e\xbc\x2b\x3a\x5d\x37\x38\xa5\xd2\xa5\xca\x75\x03\x6a\xbb\x21\x61\x23\x45\x38\x95\x28\x4b\x83\x81\x83\x14\xa8\xbf\x59\x65\x93\x29\x15\x5e\xc4\x0b\x06\x24\x82\x26\xdd\x0b\xb8\x4e\x2f\xd0\x50\x5f\xe4\x81\xda\xec\xfc\x26\xb5\xd8\xd4\x47\x79\xdd\x42\x75\x4e\x95\x20\xd3\x40\xdd\xc5\xc8\x7c\x9e\xa4\xab\x9e\x97\x60\x85\x4e\x1f\x03\x9c\x79\x97\xf8\x64\x5b\x15\xb8\x54\x3e\x5e\x80\x7b\x92\x16\x88\xaa\x72\x40\x3b\x8d\x34\x0a\x73\x70\xdf\xe8\x9c\xc8\x35\xaa\xdd\x08\xfb\x26\x6e\xe6\xc4\x9d\x60\x14\xae\x62\x32\x4a\xec\x16\x53\xd9\xdf\x45\x41\xd3\xfe\xb2\x73\x80\x95\x0a\x35\x5e\xf5\xcf\x6c\x84\x46\xf1\xfb\x02\xea\xa4\xd7\x22\x5a\xbc\xaa\x82\x19\x54\x2a\x81\xc9\x1c\x80\xf9\x4d\xea\x6c\x31\x5f\x95\x67\x38\x9b\x29\x91\x19\x60\xce\x9b\x29\xf8\xbb\x63\xca\x33\x7d\xd5\x1a\x80\xc9\xae\x26\x72\x5f\x18\x45\x15\x7d\xd5\xd5\x9d\xfa\x7a\x2f\x53\xda\xcc\xa7\xf7\x7a\x55\x65\x90\x06\x65\x8b\x8c\x11\xdf\x98\xcf\x1c\x4f\x3e\xa1\xcd\xd0\x36\xf9\x9e\x35\xc7\x66\xf8\x98\x9b\x3a\xa1\x25\x47\xde\x35\x94\xf3\xe4\x14\xea\x1b\xb3\xee\xe5\x0c\x25\xe3\x35\x4e\xf0\x1c\x52\x90\x23\x34\x91\xf8\x42\x25\xf7\x2d\x5e\xfa\xf1\x50\xe5\xd6\x59\x7c\x26\x63\x88\xfa\x96\xc6\x20\x5d\x66\x14\xb5\xcb\x1a\xf5\x87\xb3\x2e\x64\x2b\xf5\x6b\xd1\xe3\xc2\xbf\x51\x90\xa8\xf3\x26\x96\xd2\x9e\xdf\x0a\x8f\x5d\x9c\xd8\x52\xa2\x5a\x21\x13\xd6\x18\x82\xb7\xcf\x54\x7c\x45\x69\xdb\xb1\x8c\xcb\x2c\x28\x30\x8a\x74\x02\x4b\xd4\x09\x70\x0c\x42\x5d\x93\xa3\x85\xc0\xf7\xbe\x92\xf4\x44\xc3\x21\x4d\x73\x69\xa4\x31\xac\x97\xc0\x26\x4d\x5b\xb8\x16\x99\xab\x7c\xdc\xcf\x07\x0b\xee\x36\xf5\x21\xb7\x64\xf8\x48\xc3\x1e\x95\x0e\xc8\x8e\x1a\xb7\xe8\x3c\x45\x1d\xe8\x27\x60\x5b\xa3\x70\x0b\x20\xd6\x47\x32\xb8\x2f\x48\xf1\x5e\x60\x2b\x6d\x83\x50\xb2\x21\xdd\xf8\x31\x3b\x63\x9f\x0f\x5f\x5e\x5c\x2b\x98\xa3\x6f\xa7\xf8\x6c\xbb\xc6\x31\xea\x97\xa1\xe9\xd7\x1e\xc2\x68\x86\x17\xa0\xf5\x3e\x9c\x32\x7b\xde\xef\x5c\x8a\x3d\x37\xf1\xe0\x77\xa1\xe8\x11\xe1\xe4\x23\x04\xff\x5e\x58\xb9\x80\x52\xe2\x41\x8b\x33\x2c\xe0\x32\x38\x41\x92\x5a\x1f\x57\xc8\xf4\x9f\x0d\xe1\xf5\x55\xd6\xc0\x7d\x6f\x90\x26\xea\x1e\xd0\x2b\x99\x4c\x4d\x04\x46\xbe\xe5\x9d\x01\x2f\xea\xe9\xde\xe3\x5d\x8b\x30\xfd\x19\x37\x85\x07\x24\xb6\x06\x99\x0e\x87\x4c\x96\x94\xc7\xd6\x01\xb5\xe0\xd9\x40\xdf\xaa\x37\x4a\x4a\x1e\xd6\x6e\x52\x37\x77\x31\x37\xee\xbc\x1c\x6b\xfd\x5d\x7b\x0a\x89\x70\x50\xff\x31\x35\xd1\xa7\x71\x6d\xb0\x87\xdd\xa9\x6c\x5b\x53\x0a\xb5\xd3\x17\xa6\xa7\x0c\x31\x53\xfd\x35\x43\xd1\xd8\xd4\xb2\xac\x98\xa1\x26\x29\x52\x01\xf5\x9a\xdb\xf3\xa4\x8d\x1a\x22\xdd\x2d\x2c\x9a\x0d\xb5\x51\x96\xbb\x16\xbe\xca\x07\x6f\xa8\x62\xf6\x10\x74\xb1\x79\x88\xd9\x83\xe5\xd0\xf0\xbc\xa7\xd8\x4e\xf8\x0a\x91\xc5\x3c\x97\xd2\x2e\x79\x0a\xe6\x28\xa4\xa9\xba\x30\xa4\x36\xaa\x6c\xfa\x50\xbf\xb8\x13\x69\x80\x4c\xab\x3d\xac\xbe\x88\x7b\xe9\x8d\x7f\x9e\x5e\x4b\x5f\x2b\x55\xba\xf6\x3e\xc7\x3c\x2a\x27\x70\xc5\xc7\x87\xde\xac\xd3\xa2\xeb\x89\x42\xaa\x68\xa6\x22\x51\x92\x1a\x62\x5d\x1d\x2c\x28\x1e\xae\xcc\x69\xd6\xa0\x9a\x62\x43\xf8\xc5\x69\x2f\x25\x52\x80\x1f\x58\x2b\x5c\x93\xf3\xa2\x7c\x11\xa7\x0a\xf2\xe9\xa4\x30\x94\x65\x75\xb3\xa1\xe2\x5f\x80\xe7\x75\x91\xad\x4b\xa7\xbe\x30\x89\x3e\xf8\xd4\xb3\xff\xec\x6e\xec\x4d\x6c\x14\x52\x02\x8c\xb8\xd0\xc3\x43\x8f\x50\xeb\x11\x59\x24\x30\xca\x9c\x83\xf4\xa9\x72\x5b\xbf\xd2\x06\x2a\xdb\xd6\xf9\x39\xed\x51\xbc\xb9\x3e\xfe\x14\xc1\x01\x63\xbb\xd4\x64\xdf\x58\xc0\x12\x7d\x2f\x14\xae\x49\x16\x11\xe9\x71\x2a\xcc\x4f\xfd\x5a\xec\x70\xf7\x6f\x05\x59\x59\x62\xc3\x9a\x44\x97\x23\x19\xb6\x51\x29\xe0\xed\xb6\xc4\xbf\xa9\x5e\xf0\xdb\xcb\x8d\x97\x09\xa3\x45\xd8\xa2\xcc\x6b\x1d\x81\x2d\xef\x1a\xff\x24\x7e\x14\x4f\x3f\x61\xf7\x70\x12\xe5\x03\xd3\x2b\x80\x75\x54\x28\xd2\xe8\x23\xfa\x7a\x96\x15\xed\x02\x64\xfa\xea\x83\x83\xb4\xf1\x2f\xbd\x2c\x64\xf9\x18\xb9\x3c\x5b\x55\x3a\xbf\x85\x53\x3a\x95\xaf\xd8\x82\xe8\x92\xee\xa3\x2c\x8d\xa6\x32\x43\x0a\x7b\xa4\x30\x42\xd2\xa8\x51\x8f\xdc\x80\xf6\x22\x87\x43\xfa\x34\x48\x78\x70\x64\xb1\xd5\xfe\xcb\xea\x35\x65\x6a\x2a\x90\x6a\x58\x8e\x41\x92\xf3\xa4\x60\x4f\x0f\x16\x64\xc5\x4f\x80\x54\x90\xb7\x1b\x6d\x8b\x65\x8f\xa2\xbf\x09\xfe\x37\xf3\xf5\x44\xa5\x23\x3a\xb6\x4d\xdd\x50\x34\xc9\x04\x6d\x66\x10\xc5\xbe\x12\x22\x05\xe7\x57\xbe\xa1\x25\xaa\xaf\x81\x0e\x95\x44\x39\xc8\xff\x67\x12\x75\x58\x05\xfa\xed\x28\xb1\x4d\xc7\xf0\x71\x07\x43\x67\x3b\x1f\xc5\xd8\x36\x0b\xe3\xeb\xc9\x8e\x71\xc5\x27\x2f\x09\x82\x49\x64\x5a\x91\xc8\x34\xf2\xe9\xf0\xa6\xb2\x52\xcb\x5b\xea\x6c\x04\x1f\x3e\x09\x30\xa5\xdd\x2a\x91\x35\x0a\x1f\x4e\x2d\xdc\xbf\x01\x53\xf9\x8d\x35\x9a\xd0\x6c\xdb\xe2\x0e\x34\x5a\x7a\x49\x05\x87\x3f\xe9\x83\xdd\x69\x79\x64\x98\xce\x5e\x71\x44\xec\x78\x37\x64\x5e\xa6\x31\x5a\x03\x52\x0d\xd6\xfc\x8c\x8a\xbf\x31\x47\xa3\x8f\x5d\x21\x80\x8b\xb5\x42\x89\xa1\x0b\x87\x89\x31\x46\x3f\xb3\xc1\x8e\x15\xb8\xff\x6f\x2e\xb7\xf8\x27\x87\x16\x1e\x46\x7d\xf7\x36\xec\x33\x30\x99\xba\x8f\x02\x75\xdb\xfb\x5e\xf2\xe0\x85\x7c\x7b\xb8\x95\x56\x98\x1f\x62\x58\x43\x00\xcf\x4b\x4a\xa3\x62\xa2\xa7\xc9\xbd\x7f\x49\xb5\x5a\x7f\x88\xd2\x06\x51\x2a\xd1\xd7\xe1\xcd\xb5\x86\xc5\x7e\x50\x57\x38\xfb\x6c\x9a\x04\xbb\xe3\x47\xe3\xd4\x10\x98\xf1\x13\x2b\x43\xf2\xa1\xfc\x19\x12\x4d\x25\x24\x9a\x8a\x24\xa9\x5b\xf7\x3d\xd5\x5f\xb5\xff\x0b\x39\x49\xe4\xc5\xf1\x78\x2e\x3b\xcf\x98\xa3\xd5\xbc\x16\x19\x43\x82\xe6\x78\x54\xb6\xf2\x68\x0e\xdb\xb7\xc1\x5d\xa8\x47\x7c\x71\x05\xa5\xf4\x86\xc8\x15\x77\xf4\xf4\xff\xb4\x77\x95\xf7\xde\x2a\xf7\x4c\x83\x7a\x5e\xb0\x70\x0f\x3e\xc5\xcf\x78\xb4\xf6\x5c\x8a\xc2\x6b\xe7\x96\xbc\xa4\x4b\x7d\xc2\xa0\x8e\x61\xab\x83\xb1\x0b\x0c\x71\x74\x09\x60\xcf\xdf\x3e\xb1\x2e\x45\xe3\x50\xd1\x7d\x87\x06\xfc\x4a\xf8\xcf\xe4\x47\x23\x86\x15\x33\x04\x56\x01\xf4\x0c\x2b\x58\xc9\x1b\x5c\xfa\x35\x29\x02\xc4\x6b\xb9\xe7\x87\xf2\xb2\x2a\x3c\xcf\xd0\x21\xb6\xe3\x09\xa4\xeb\xd8\xb0\x88\x5b\x57\x5e\xe2\x6b\x07\xc3\x6f\x05\x7c\x19\xef\x6a\x0f\x07\xe5\xe7\x97\x34\x8e\x78\x5e\x32\xde\x11\xd1\xe8\xd0\x5f\xcb\x6b\xe3\x1b\xe2\x52\x89\x23\x4d\xaa\xbc\xfb\x66\x37\xfa\x33\x17\x52\x3b\xf7\x87\xe0\x32\x63\x93\x7d\x1a\x71\x88\xe3\xe7\xb9\x32\x24\xc1\x3e\xa5\xac\x61\xce\xd9\x49\xb1\xc2\x15\xd9\x2e\x68\xfe\x9c\x60\x0a\xae\x02\x7c\x73\xd1\xa2\xf3\xba\xaa\x98\x6f\x68\x9c\x77\x96\xef\x74\x89\x3f\xfd\x45\x8e\xca\xd7\xbf\x20\x43\xcb\xe2\x06\xff\xfd\x8b\x71\x26\xf3\xc8\xac\xcb\x65\xc2\x63\x7e\x7d\x31\xc9\xf5\x1c\xf3\xa2\x8f\x3e\xde\x6a\x25\x56\x6c\xac\xc1\x6c\x0c\xe2\x46\x28\x59\xe3\xd9\xd4\x2b\x98\x63\x77\x1b\xe8\x71\xd2\xc0\xe8\x0d\x45\x05\x3d\x5a\x04\x07\xdb\x67\x0f\x2b\xb9\x25\xce\x4a\xff\x0f\x00\x00\xff\xff\x98\x94\xf2\x93\xc4\x0f\x00\x00")

func binNounsTxtBytes() ([]byte, error) {
	return bindataRead(
		_binNounsTxt,
		"bin/nouns.txt",
	)
}

func binNounsTxt() (*asset, error) {
	bytes, err := binNounsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bin/nouns.txt", size: 4036, mode: os.FileMode(436), modTime: time.Unix(1475068381, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"bin/adjectives.txt": binAdjectivesTxt,
	"bin/nouns.txt": binNounsTxt,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"bin": &bintree{nil, map[string]*bintree{
		"adjectives.txt": &bintree{binAdjectivesTxt, map[string]*bintree{}},
		"nouns.txt": &bintree{binNounsTxt, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

